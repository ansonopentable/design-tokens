{"version":3,"sources":["webpack:///./src/components/design-system-partials/otkit-icons-theme.js","webpack:///../OTKit/otkit-grids/token.common.js","webpack:///./src/components/design-system-partials/otkit-icons.js","webpack:///./src/components/design-system-partials/otkit-shadows.js","webpack:///../OTKit/otkit-typography-desktop/token.common.js","webpack:///../OTKit/otkit-shadows/token.common.js","webpack:///./src/components/design-system-partials/otkit-borders.js","webpack:///./src/pages/index.js","webpack:///./src/styles/otkit-icons.module.scss","webpack:///./src/components/design-system-partials/otkit-breakpoints.js","webpack:///./src/components/design-system-partials/otkit-grids.js","webpack:///./src/components/design-system-partials/otkit-spacing.js","webpack:///./src/styles/otkit-typography-desktop.module.scss","webpack:///../OTKit/otkit-borders/token.common.js","webpack:///../OTKit/otkit-breakpoints/token.common.js","webpack:///../OTKit/otkit-spacing/token.common.js","webpack:///./src/components/design-system-partials/otkit-typography.js"],"names":["Icons","useState","color","setColor","filter","setFilter","keys","_","icons","sort","actualIcons","without","getFilter","event","key","target","value","toLowerCase","tokens","name","iconName","kebabCase","regex","RegExp","match","map","className","styles","card","iconBlock","icon","dangerouslySetInnerHTML","__html","style","mainContainer","text","type","content","Object","colors","form","onChange","e","updateColor","default","placeholder","renderHeaderContent","sectionIcon","module","exports","marginLarge","gutterLarge","marginSmall","gutterSmall","Shadows","toPairsIn","token","index","xxlargeBoldFontWeight","largeBoldFontWeight","xlargeBoldFontSize","fontFamilyJa","xlargeBoldLineHeight","fontFamily","smallMediumFontWeight","xsmallMediumFontSize","xsmallMediumLineHeight","mediumBoldFontWeight","xsmallRegularFontWeight","smallRegularFontSize","xxsmallRegularFontSize","xxlargeBoldFontSize","largeBoldFontSize","smallRegularLineHeight","xxsmallRegularLineHeight","xxlargeBoldLineHeight","largeBoldLineHeight","xsmallBoldFontWeight","fontWeightMedium","smallMediumFontSize","smallMediumLineHeight","mediumBoldFontSize","mediumBoldLineHeight","xsmallRegularFontSize","largeMediumFontWeight","xsmallRegularLineHeight","smallBoldFontWeight","xsmallBoldFontSize","xsmallBoldLineHeight","xlargeBoldFontWeight","largeMediumFontSize","largeMediumLineHeight","fontWeightBold","fontFamilyBrand","xsmallMediumFontWeight","smallBoldFontSize","fontWeightNormal","smallBoldLineHeight","xxsmallRegularFontWeight","smallRegularFontWeight","boxShadowContainer","Borders","withLayout","href","rel","Breakpoints","Grids","Spacing","borderRadiusSmall","breakpointDesktopMin","breakpointTabletMax","breakpointTabletMin","breakpointMobileMax","spacingXsmall","spacingSmall","spacingMedium","spacingLarge","spacingXlarge","spacingXxlarge","typographyGroups","TypographyDesktop","groups","group","fontSize","camelCase","fontWeight","lineHeight","divStyle","fontItem","fontColumn"],"mappings":"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","file":"component---src-pages-index-js-865b0eadbd0d593fd1ae.js","sourcesContent":["import React, { useState } from 'react';\nimport _ from 'lodash';\nimport icons from 'otkit-icons/token.theme.common';\nimport colors from 'otkit-colors/token.common';\n\nimport SectionHeader from '../section-header';\nimport styles from '../../styles/otkit-icons.module.scss';\n\nconst Icons = () => {\n  const [color, setColor] = useState('#000000');\n  const [filter, setFilter] = useState('');\n\n  const keys = _.keys(icons).sort();\n  const actualIcons = _.without(keys, 'iconSize');\n\n  const updateColor = color => {\n    setColor(color);\n  };\n\n  const getFilter = event => {\n    const key = event.target.value || '';\n    setFilter(key.toLowerCase());\n  };\n\n  const renderHeaderContent = () => {\n    const keys = Object.keys(colors).sort();\n    return (\n      <div>\n        {/* eslint-disable-next-line jsx-a11y/no-onchange */}\n        <select\n          className={styles.form}\n          onChange={e => updateColor(e.target.value)}\n          value={color}\n        >\n          <option value=\"#000000\" default>\n            Black - #000000\n          </option>\n          {keys.map(name => (\n            <option key={name} value={colors[name]}>\n              {_.kebabCase(name)} - {colors[name]}\n            </option>\n          ))}\n        </select>\n        <input\n          className={styles.form}\n          type=\"text\"\n          onChange={getFilter}\n          placeholder=\"Search icon\"\n        />\n      </div>\n    );\n  };\n\n  const tokens = actualIcons\n    .filter(name => {\n      if (filter === '') {\n        return true;\n      }\n      const iconName = _.kebabCase(name);\n      const regex = RegExp(`.*${filter}.*`, 'g');\n      return iconName.match(regex);\n    })\n    .map(name => {\n      const value = icons[name];\n\n      return (\n        <div className={styles.card} key={name}>\n          <div className={styles.iconBlock}>\n            <div\n              className={styles.icon}\n              dangerouslySetInnerHTML={{ __html: value }}\n              style={{ color }}\n            />\n          </div>\n          <div className={styles.iconName}>{_.kebabCase(name)}</div>\n        </div>\n      );\n    });\n\n  return (\n    <div className={styles.mainContainer}>\n      <SectionHeader\n        text=\"Icons (theme)\"\n        type=\"SectionHeader__small\"\n        content={renderHeaderContent()}\n      />\n      <div className={styles.sectionIcon}>{tokens}</div>\n    </div>\n  );\n};\n\nexport default Icons;\n","module.exports = {\n  marginLarge: \"32px\",\n  gutterLarge: \"16px\",\n  marginSmall: \"24px\",\n  gutterSmall: \"12px\",\n};","import React, { useState } from 'react';\nimport _ from 'lodash';\nimport icons from 'otkit-icons/token.common';\n\nimport SectionHeader from '../section-header';\nimport styles from '../../styles/otkit-icons.module.scss';\n\nconst Icons = () => {\n  const [filter, setFilter] = useState('');\n\n  const keys = _.keys(icons).sort();\n  const actualIcons = _.without(keys, 'iconSize');\n\n  const getFilter = event => {\n    const key = event.target.value || '';\n    setFilter(key.toLowerCase());\n  };\n\n  const renderHeaderContent = () => (\n    <input\n      className={styles.form}\n      type=\"text\"\n      onChange={getFilter}\n      placeholder=\"Search icon\"\n    />\n  );\n\n  const tokens = actualIcons\n    .filter(name => {\n      if (filter === '') {\n        return true;\n      }\n      const iconName = _.kebabCase(name);\n      const regex = RegExp(`.*${filter}.*`, 'g');\n      return iconName.match(regex);\n    })\n    .map(name => {\n      const value = icons[name];\n\n      return (\n        <div className={styles.card} key={name}>\n          <div className={styles.iconBlock}>\n            <div\n              className={styles.icon}\n              dangerouslySetInnerHTML={{ __html: value }}\n            />\n          </div>\n          <div className={styles.iconName}>{_.kebabCase(name)}</div>\n        </div>\n      );\n    });\n  return (\n    <div className={styles.mainContainer}>\n      <SectionHeader\n        text=\"Icons\"\n        type=\"SectionHeader__small\"\n        content={renderHeaderContent()}\n      />\n      <div className={styles.sectionIcon}>{tokens}</div>\n    </div>\n  );\n};\n\nexport default Icons;\n","import React from 'react';\nimport _ from 'lodash';\nimport token from 'otkit-shadows/token.common';\n\nimport SectionHeader from '../section-header';\nimport styles from '../../styles/index.module.scss';\n\nconst Shadows = () => {\n  var tokens = _.toPairsIn(token);\n\n  tokens = tokens.map((token, index) => {\n    return (\n      <div key={index}>\n        {_.kebabCase(token[0])}: {token[1]}\n      </div>\n    );\n  });\n  return (\n    <div className={styles.mainContainer}>\n      <SectionHeader text=\"Shadows\" type=\"SectionHeader__small\" />\n      {tokens}\n    </div>\n  );\n};\n\nexport default Shadows;\n","module.exports = {\n  xxlargeBoldFontWeight: \"bold\",\n  largeBoldFontWeight: \"bold\",\n  xlargeBoldFontSize: \"32px\",\n  fontFamilyJa: \"'BrandonText', 'Helvetica Neue', Helvetica, Arial, OpenTableHiragino, Roboto, Droid Sans, '游ゴシック体', OpenTableYuGothic, YuGothic, Yu Gothic, 'メイリオ', Meiryo, 'ＭＳ Ｐゴシック', 'MS PGothic', sans-serif\",\n  xlargeBoldLineHeight: \"36px\",\n  fontFamily: \"'BrandonText', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'\",\n  smallMediumFontWeight: \"500\",\n  xsmallMediumFontSize: \"14px\",\n  xsmallMediumLineHeight: \"20px\",\n  mediumBoldFontWeight: \"bold\",\n  xsmallRegularFontWeight: \"normal\",\n  smallRegularFontSize: \"16px\",\n  xxsmallRegularFontSize: \"12px\",\n  xxlargeBoldFontSize: \"48px\",\n  largeBoldFontSize: \"24px\",\n  smallRegularLineHeight: \"24px\",\n  xxsmallRegularLineHeight: \"16px\",\n  xxlargeBoldLineHeight: \"56px\",\n  largeBoldLineHeight: \"28px\",\n  xsmallBoldFontWeight: \"bold\",\n  fontWeightMedium: \"500\",\n  smallMediumFontSize: \"16px\",\n  smallMediumLineHeight: \"24px\",\n  mediumBoldFontSize: \"18px\",\n  mediumBoldLineHeight: \"24px\",\n  xsmallRegularFontSize: \"14px\",\n  largeMediumFontWeight: \"500\",\n  xsmallRegularLineHeight: \"20px\",\n  smallBoldFontWeight: \"bold\",\n  xsmallBoldFontSize: \"14px\",\n  xsmallBoldLineHeight: \"20px\",\n  xlargeBoldFontWeight: \"bold\",\n  largeMediumFontSize: \"24px\",\n  largeMediumLineHeight: \"32px\",\n  fontWeightBold: \"bold\",\n  fontFamilyBrand: \"BrandonText\",\n  xsmallMediumFontWeight: \"500\",\n  smallBoldFontSize: \"16px\",\n  fontWeightNormal: \"normal\",\n  smallBoldLineHeight: \"24px\",\n  xxsmallRegularFontWeight: \"normal\",\n  smallRegularFontWeight: \"normal\",\n};","module.exports = {\n  boxShadowContainer: \"0px 2px 4px rgba(45, 51, 63, .2)\",\n};","import React from 'react';\nimport _ from 'lodash';\nimport token from 'otkit-borders/token.common';\n\nimport SectionHeader from '../section-header';\nimport styles from '../../styles/index.module.scss';\n\nconst Borders = () => {\n  var tokens = _.toPairsIn(token);\n\n  tokens = tokens.map((token, index) => {\n    return (\n      <div key={index}>\n        {_.kebabCase(token[0])}: {token[1]}\n      </div>\n    );\n  });\n  return (\n    <div className={styles.mainContainer}>\n      <SectionHeader text=\"Borders\" type=\"SectionHeader__small\" />\n      {tokens}\n    </div>\n  );\n};\n\nexport default Borders;\n","import React from 'react';\nimport withLayout from '../hocs/withLayout';\n\nimport styles from '../styles/index.module.scss';\n\nimport Colors from '../components/design-system-partials/otkit-colors.js';\nimport Typography from '../components/design-system-partials/otkit-typography.js';\nimport Spacing from '../components/design-system-partials/otkit-spacing.js';\nimport Borders from '../components/design-system-partials/otkit-borders.js';\nimport Breakpoints from '../components/design-system-partials/otkit-breakpoints.js';\nimport Shadows from '../components/design-system-partials/otkit-shadows.js';\nimport Grids from '../components/design-system-partials/otkit-grids.js';\nimport Icons from '../components/design-system-partials/otkit-icons.js';\nimport IconsTheme from '../components/design-system-partials/otkit-icons-theme.js';\nimport SectionHeader from '../components/section-header';\n\nexport default withLayout(() => {\n  return (\n    <div className={styles.mainContainer}>\n      <SectionHeader text=\"Design Tokens\" />\n      <p>\n        This page shows current design tokens used in OTKit. To contribute, or\n        add an issue, visit the{' '}\n        <a href=\"https://github.com/opentable/design-tokens\" rel=\"noreferrer\" target=\"_blank\">\n          design-tokens repository\n        </a>\n        .\n      </p>\n      <Colors />\n      <Typography />\n      <Grids />\n      <Spacing />\n      <Borders />\n      <Breakpoints />\n      <Shadows />\n      <Icons />\n      <IconsTheme />\n    </div>\n  );\n}, 'design-system-nav');\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionIcon\":\"otkit-icons-module--section-icon--2DHQR\",\"mainContainer\":\"otkit-icons-module--main-container--1aeSM\",\"card\":\"otkit-icons-module--card--2EYEk\",\"iconBlock\":\"otkit-icons-module--icon-block--3mis2\",\"icon\":\"otkit-icons-module--icon--1HTQU\",\"iconName\":\"otkit-icons-module--icon-name--2Emxm\",\"form\":\"otkit-icons-module--form--25uSM\"};","import React from 'react';\nimport _ from 'lodash';\nimport token from 'otkit-breakpoints/token.common';\n\nimport SectionHeader from '../section-header';\nimport styles from '../../styles/index.module.scss';\n\nconst Breakpoints = () => {\n  var tokens = _.toPairsIn(token);\n\n  tokens = tokens.map((token, index) => {\n    return (\n      <div key={index}>\n        {_.kebabCase(token[0])}: {token[1]}\n      </div>\n    );\n  });\n  return (\n    <div className={styles.mainContainer}>\n      <SectionHeader text=\"Breakpoints\" type=\"SectionHeader__small\" />\n      {tokens}\n    </div>\n  );\n};\n\nexport default Breakpoints;\n","import React from 'react';\nimport _ from 'lodash';\nimport token from 'otkit-grids/token.common';\n\nimport SectionHeader from '../section-header';\nimport styles from '../../styles/index.module.scss';\n\nconst Grids = () => {\n  var tokens = _.toPairsIn(token);\n\n  tokens = tokens.map((token, index) => {\n    return (\n      <div key={index}>\n        {_.kebabCase(token[0])}: {token[1]}\n      </div>\n    );\n  });\n  return (\n    <div className={styles.mainContainer}>\n      <SectionHeader text=\"Grids\" type=\"SectionHeader__small\" />\n      {tokens}\n    </div>\n  );\n};\n\nexport default Grids;\n","import React from 'react';\nimport _ from 'lodash';\nimport token from 'otkit-spacing/token.common';\n\nimport SectionHeader from '../section-header';\nimport styles from '../../styles/index.module.scss';\n\nconst Spacing = () => {\n  var tokens = _.toPairsIn(token);\n\n  tokens = tokens.map((token, index) => {\n    return (\n      <div key={index}>\n        {_.kebabCase(token[0])}: {token[1]}\n      </div>\n    );\n  });\n\n  return (\n    <div className={styles.mainContainer}>\n      <SectionHeader text=\"Spacing\" type=\"SectionHeader__small\" />\n      {tokens}\n    </div>\n  );\n};\n\nexport default Spacing;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fontItem\":\"otkit-typography-desktop-module--font-item--W_aj9\",\"mainContainer\":\"otkit-typography-desktop-module--main-container--20br3\"};","module.exports = {\n  borderRadiusSmall: \"4px\",\n};","module.exports = {\n  breakpointDesktopMin: \"1056px\",\n  breakpointTabletMax: \"1055px\",\n  breakpointTabletMin: \"768px\",\n  breakpointMobileMax: \"767px\",\n};","module.exports = {\n  spacingXsmall: \"4px\",\n  spacingSmall: \"8px\",\n  spacingMedium: \"16px\",\n  spacingLarge: \"32px\",\n  spacingXlarge: \"48px\",\n  spacingXxlarge: \"64px\",\n};","import React from 'react';\nimport _ from 'lodash';\nimport token from 'otkit-typography-desktop/token.common';\n\nimport SectionHeader from '../section-header';\nimport styles from '../../styles/otkit-typography-desktop.module.scss';\n\nconst typographyGroups = [\n  'xxlarge-bold',\n  'xlarge-bold',\n  'large-bold',\n  'large-medium',\n  'medium-bold',\n  'small-bold',\n  'small-medium',\n  'small-regular',\n  'xsmall-bold',\n  'xsmall-medium',\n  'xsmall-regular'\n];\n\nconst TypographyDesktop = () => {\n  const groups = typographyGroups.map((group, index) => {\n    const fontSize = token[_.camelCase(`${group}-font-size`)];\n    const fontWeight = token[_.camelCase(`${group}-font-weight`)];\n    const lineHeight = token[_.camelCase(`${group}-line-height`)];\n    const divStyle = { fontSize, fontWeight, lineHeight };\n\n    return (\n      <div className={styles.fontItem} style={divStyle} key={index}>\n        {group} | font-size: {fontSize} | font-weight: {fontWeight} |\n        line-height: {lineHeight}\n      </div>\n    );\n  });\n\n  return (\n    <div className={styles.mainContainer}>\n      <SectionHeader text=\"Typography – Desktop\" type=\"SectionHeader__small\" />\n      <p>\n        To use these OTKit typography rules in your project, we have a\n        production-tested package that exports readily made font groupings for\n        you:{' '}\n        <a href=\"https://github.com/opentable/ot-react-ui-components/tree/master/styles/typography-desktop\">\n          @ot-react-ui/typography-desktop.\n        </a>{' '}\n        See its README for details.\n      </p>\n      <p>\n        It is generally <em>not recommended</em> to directly consume / reference\n        the values in this token unless for explicit reasons, such as\n        overriding.\n      </p>\n      <div className={styles.fontColumn}>{groups}</div>\n    </div>\n  );\n};\n\nexport default TypographyDesktop;\n"],"sourceRoot":""}