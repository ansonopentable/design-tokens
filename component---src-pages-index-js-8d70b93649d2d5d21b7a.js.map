{"version":3,"sources":["webpack:///./src/components/design-system-partials/otkit-icons-theme.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///../OTKit/otkit-grids/token.common.js","webpack:///./src/components/design-system-partials/otkit-icons.js","webpack:///./src/components/design-system-partials/otkit-shadows.js","webpack:///../OTKit/otkit-typography-desktop/token.common.js","webpack:///../OTKit/otkit-shadows/token.common.js","webpack:///./src/components/design-system-partials/otkit-borders.js","webpack:///./src/pages/index.js","webpack:///./src/styles/otkit-icons.module.scss","webpack:///./src/components/design-system-partials/otkit-breakpoints.js","webpack:///./src/components/design-system-partials/otkit-grids.js","webpack:///./src/components/design-system-partials/otkit-spacing.js","webpack:///./src/styles/otkit-typography-desktop.module.scss","webpack:///../OTKit/otkit-borders/token.common.js","webpack:///../OTKit/otkit-breakpoints/token.common.js","webpack:///../OTKit/otkit-spacing/token.common.js","webpack:///./src/components/design-system-partials/otkit-typography.js"],"names":["Icons","updateColor","color","setState","state","bind","self","ReferenceError","renderSelect","keys","Object","colors","sort","onChange","e","target","value","this","default","map","name","key","_","kebabCase","render","icons","tokens","without","className","styles","card","iconBlock","icon","dangerouslySetInnerHTML","__html","style","iconName","mainContainer","text","type","content","sectionIcon","React","Component","module","exports","marginLarge","gutterLarge","marginSmall","gutterSmall","Shadows","toPairsIn","token","index","xxlargeBoldFontWeight","largeBoldFontWeight","xlargeBoldFontSize","fontFamilyJa","xlargeBoldLineHeight","fontFamily","smallMediumFontWeight","xsmallMediumFontSize","xsmallMediumLineHeight","mediumBoldFontWeight","xsmallRegularFontWeight","smallRegularFontSize","xxsmallRegularFontSize","xxlargeBoldFontSize","largeBoldFontSize","smallRegularLineHeight","xxsmallRegularLineHeight","xxlargeBoldLineHeight","largeBoldLineHeight","xsmallBoldFontWeight","fontWeightMedium","smallMediumFontSize","smallMediumLineHeight","mediumBoldFontSize","mediumBoldLineHeight","xsmallRegularFontSize","largeMediumFontWeight","xsmallRegularLineHeight","smallBoldFontWeight","xsmallBoldFontSize","xsmallBoldLineHeight","xlargeBoldFontWeight","largeMediumFontSize","largeMediumLineHeight","fontWeightBold","fontFamilyBrand","xsmallMediumFontWeight","smallBoldFontSize","fontWeightNormal","smallBoldLineHeight","xxsmallRegularFontWeight","smallRegularFontWeight","boxShadowContainer","Borders","withLayout","href","rel","Breakpoints","Grids","Spacing","borderRadiusSmall","breakpointDesktopMin","breakpointTabletMax","breakpointTabletMin","breakpointMobileMax","spacingXsmall","spacingSmall","spacingMedium","spacingLarge","spacingXlarge","spacingXxlarge","typographyGroups","TypographyDesktop","groups","group","fontSize","camelCase","fontWeight","lineHeight","divStyle","fontItem","fontColumn"],"mappings":"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","file":"component---src-pages-index-js-8d70b93649d2d5d21b7a.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport icons from 'otkit-icons/token.theme.common';\nimport colors from 'otkit-colors/token.common';\n\nimport SectionHeader from '../section-header';\nimport styles from '../../styles/otkit-icons.module.scss';\n\nclass Icons extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      color: '#000000'\n    };\n    this.updateColor = this.updateColor.bind(this);\n  }\n\n  renderSelect() {\n    const keys = Object.keys(colors).sort();\n    return (\n      <div>\n        <select\n          onChange={e => this.updateColor(e.target.value)}\n          value={this.state.color}\n        >\n          <option value=\"#000000\" default>\n            Black - #000000\n          </option>\n          {keys.map(name => (\n            <option key={name} value={colors[name]}>\n              {_.kebabCase(name)} - {colors[name]}\n            </option>\n          ))}\n        </select>\n      </div>\n    );\n  }\n\n  updateColor = color => {\n    this.setState({ color });\n  };\n\n  render() {\n    const keys = _.keys(icons).sort();\n    const actualIcons = _.without(keys, 'iconSize');\n\n    const tokens = actualIcons.map(name => {\n      const value = icons[name];\n\n      return (\n        <div className={styles.card} key={name}>\n          <div className={styles.iconBlock}>\n            <div\n              className={styles.icon}\n              dangerouslySetInnerHTML={{ __html: value }}\n              style={{ color: this.state.color }}\n            />\n          </div>\n          <div className={styles.iconName}>{_.kebabCase(name)}</div>\n        </div>\n      );\n    });\n\n    return (\n      <div className={styles.mainContainer}>\n        <SectionHeader\n          text=\"Icons (theme)\"\n          type=\"SectionHeader__small\"\n          content={this.renderSelect()}\n        />\n        <div className={styles.sectionIcon}>{tokens}</div>\n      </div>\n    );\n  }\n}\n\nexport default Icons;\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","module.exports = {\n  marginLarge: \"32px\",\n  gutterLarge: \"16px\",\n  marginSmall: \"24px\",\n  gutterSmall: \"12px\",\n};","import React from 'react';\nimport _ from 'lodash';\nimport icons from 'otkit-icons/token.common';\n\nimport SectionHeader from '../section-header';\nimport styles from '../../styles/otkit-icons.module.scss';\n\nconst Icons = () => {\n  const keys = _.keys(icons).sort();\n  const actualIcons = _.without(keys, 'iconSize');\n\n  const tokens = actualIcons.map(name => {\n    const value = icons[name];\n\n    return (\n      <div className={styles.card} key={name}>\n        <div className={styles.iconBlock}>\n          <div\n            className={styles.icon}\n            dangerouslySetInnerHTML={{ __html: value }}\n          />\n        </div>\n        <div className={styles.iconName}>{_.kebabCase(name)}</div>\n      </div>\n    );\n  });\n  return (\n    <div className={styles.mainContainer}>\n      <SectionHeader text=\"Icons\" type=\"SectionHeader__small\" />\n      <div className={styles.sectionIcon}>{tokens}</div>\n    </div>\n  );\n};\n\nexport default Icons;\n","import React from 'react';\nimport _ from 'lodash';\nimport token from 'otkit-shadows/token.common';\n\nimport SectionHeader from '../section-header';\nimport styles from '../../styles/index.module.scss';\n\nconst Shadows = () => {\n  var tokens = _.toPairsIn(token);\n\n  tokens = tokens.map((token, index) => {\n    return (\n      <div key={index}>\n        {_.kebabCase(token[0])}: {token[1]}\n      </div>\n    );\n  });\n  return (\n    <div className={styles.mainContainer}>\n      <SectionHeader text=\"Shadows\" type=\"SectionHeader__small\" />\n      {tokens}\n    </div>\n  );\n};\n\nexport default Shadows;\n","module.exports = {\n  xxlargeBoldFontWeight: \"bold\",\n  largeBoldFontWeight: \"bold\",\n  xlargeBoldFontSize: \"32px\",\n  fontFamilyJa: \"'BrandonText', 'Helvetica Neue', Helvetica, Arial, OpenTableHiragino, Roboto, Droid Sans, '游ゴシック体', OpenTableYuGothic, YuGothic, Yu Gothic, 'メイリオ', Meiryo, 'ＭＳ Ｐゴシック', 'MS PGothic', sans-serif\",\n  xlargeBoldLineHeight: \"36px\",\n  fontFamily: \"'BrandonText', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'\",\n  smallMediumFontWeight: \"500\",\n  xsmallMediumFontSize: \"14px\",\n  xsmallMediumLineHeight: \"20px\",\n  mediumBoldFontWeight: \"bold\",\n  xsmallRegularFontWeight: \"normal\",\n  smallRegularFontSize: \"16px\",\n  xxsmallRegularFontSize: \"12px\",\n  xxlargeBoldFontSize: \"48px\",\n  largeBoldFontSize: \"24px\",\n  smallRegularLineHeight: \"24px\",\n  xxsmallRegularLineHeight: \"16px\",\n  xxlargeBoldLineHeight: \"56px\",\n  largeBoldLineHeight: \"28px\",\n  xsmallBoldFontWeight: \"bold\",\n  fontWeightMedium: \"500\",\n  smallMediumFontSize: \"16px\",\n  smallMediumLineHeight: \"24px\",\n  mediumBoldFontSize: \"18px\",\n  mediumBoldLineHeight: \"24px\",\n  xsmallRegularFontSize: \"14px\",\n  largeMediumFontWeight: \"500\",\n  xsmallRegularLineHeight: \"20px\",\n  smallBoldFontWeight: \"bold\",\n  xsmallBoldFontSize: \"14px\",\n  xsmallBoldLineHeight: \"20px\",\n  xlargeBoldFontWeight: \"bold\",\n  largeMediumFontSize: \"24px\",\n  largeMediumLineHeight: \"32px\",\n  fontWeightBold: \"bold\",\n  fontFamilyBrand: \"BrandonText\",\n  xsmallMediumFontWeight: \"500\",\n  smallBoldFontSize: \"16px\",\n  fontWeightNormal: \"normal\",\n  smallBoldLineHeight: \"24px\",\n  xxsmallRegularFontWeight: \"normal\",\n  smallRegularFontWeight: \"normal\",\n};","module.exports = {\n  boxShadowContainer: \"0px 2px 4px rgba(45, 51, 63, .2)\",\n};","import React from 'react';\nimport _ from 'lodash';\nimport token from 'otkit-borders/token.common';\n\nimport SectionHeader from '../section-header';\nimport styles from '../../styles/index.module.scss';\n\nconst Borders = () => {\n  var tokens = _.toPairsIn(token);\n\n  tokens = tokens.map((token, index) => {\n    return (\n      <div key={index}>\n        {_.kebabCase(token[0])}: {token[1]}\n      </div>\n    );\n  });\n  return (\n    <div className={styles.mainContainer}>\n      <SectionHeader text=\"Borders\" type=\"SectionHeader__small\" />\n      {tokens}\n    </div>\n  );\n};\n\nexport default Borders;\n","import React from 'react';\nimport withLayout from '../hocs/withLayout';\n\nimport styles from '../styles/index.module.scss';\n\nimport Colors from '../components/design-system-partials/otkit-colors.js';\nimport Typography from '../components/design-system-partials/otkit-typography.js';\nimport Spacing from '../components/design-system-partials/otkit-spacing.js';\nimport Borders from '../components/design-system-partials/otkit-borders.js';\nimport Breakpoints from '../components/design-system-partials/otkit-breakpoints.js';\nimport Shadows from '../components/design-system-partials/otkit-shadows.js';\nimport Grids from '../components/design-system-partials/otkit-grids.js';\nimport Icons from '../components/design-system-partials/otkit-icons.js';\nimport IconsTheme from '../components/design-system-partials/otkit-icons-theme.js';\nimport SectionHeader from '../components/section-header';\n\nexport default withLayout(() => {\n  return (\n    <div className={styles.mainContainer}>\n      <SectionHeader text=\"Design Tokens\" />\n      <p>\n        This page shows current design tokens used in OTKit. To contribute, or\n        add an issue, visit the{' '}\n        <a href=\"https://github.com/opentable/design-tokens\" rel=\"noreferrer\" target=\"_blank\">\n          design-tokens repository\n        </a>\n        .\n      </p>\n      <Colors />\n      <Typography />\n      <Grids />\n      <Spacing />\n      <Borders />\n      <Breakpoints />\n      <Shadows />\n      <Icons />\n      <IconsTheme />\n    </div>\n  );\n}, 'design-system-nav');\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionIcon\":\"otkit-icons-module--section-icon--2DHQR\",\"mainContainer\":\"otkit-icons-module--main-container--1aeSM\",\"card\":\"otkit-icons-module--card--2EYEk\",\"iconBlock\":\"otkit-icons-module--icon-block--3mis2\",\"icon\":\"otkit-icons-module--icon--1HTQU\",\"iconName\":\"otkit-icons-module--icon-name--2Emxm\"};","import React from 'react';\nimport _ from 'lodash';\nimport token from 'otkit-breakpoints/token.common';\n\nimport SectionHeader from '../section-header';\nimport styles from '../../styles/index.module.scss';\n\nconst Breakpoints = () => {\n  var tokens = _.toPairsIn(token);\n\n  tokens = tokens.map((token, index) => {\n    return (\n      <div key={index}>\n        {_.kebabCase(token[0])}: {token[1]}\n      </div>\n    );\n  });\n  return (\n    <div className={styles.mainContainer}>\n      <SectionHeader text=\"Breakpoints\" type=\"SectionHeader__small\" />\n      {tokens}\n    </div>\n  );\n};\n\nexport default Breakpoints;\n","import React from 'react';\nimport _ from 'lodash';\nimport token from 'otkit-grids/token.common';\n\nimport SectionHeader from '../section-header';\nimport styles from '../../styles/index.module.scss';\n\nconst Grids = () => {\n  var tokens = _.toPairsIn(token);\n\n  tokens = tokens.map((token, index) => {\n    return (\n      <div key={index}>\n        {_.kebabCase(token[0])}: {token[1]}\n      </div>\n    );\n  });\n  return (\n    <div className={styles.mainContainer}>\n      <SectionHeader text=\"Grids\" type=\"SectionHeader__small\" />\n      {tokens}\n    </div>\n  );\n};\n\nexport default Grids;\n","import React from 'react';\nimport _ from 'lodash';\nimport token from 'otkit-spacing/token.common';\n\nimport SectionHeader from '../section-header';\nimport styles from '../../styles/index.module.scss';\n\nconst Spacing = () => {\n  var tokens = _.toPairsIn(token);\n\n  tokens = tokens.map((token, index) => {\n    return (\n      <div key={index}>\n        {_.kebabCase(token[0])}: {token[1]}\n      </div>\n    );\n  });\n\n  return (\n    <div className={styles.mainContainer}>\n      <SectionHeader text=\"Spacing\" type=\"SectionHeader__small\" />\n      {tokens}\n    </div>\n  );\n};\n\nexport default Spacing;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fontItem\":\"otkit-typography-desktop-module--font-item--W_aj9\",\"mainContainer\":\"otkit-typography-desktop-module--main-container--20br3\"};","module.exports = {\n  borderRadiusSmall: \"4px\",\n};","module.exports = {\n  breakpointDesktopMin: \"1056px\",\n  breakpointTabletMax: \"1055px\",\n  breakpointTabletMin: \"768px\",\n  breakpointMobileMax: \"767px\",\n};","module.exports = {\n  spacingXsmall: \"4px\",\n  spacingSmall: \"8px\",\n  spacingMedium: \"16px\",\n  spacingLarge: \"32px\",\n  spacingXlarge: \"48px\",\n  spacingXxlarge: \"64px\",\n};","import React from 'react';\nimport _ from 'lodash';\nimport token from 'otkit-typography-desktop/token.common';\n\nimport SectionHeader from '../section-header';\nimport styles from '../../styles/otkit-typography-desktop.module.scss';\n\nconst typographyGroups = [\n  'xxlarge-bold',\n  'xlarge-bold',\n  'large-bold',\n  'large-medium',\n  'medium-bold',\n  'small-bold',\n  'small-medium',\n  'small-regular',\n  'xsmall-bold',\n  'xsmall-medium',\n  'xsmall-regular'\n];\n\nconst TypographyDesktop = () => {\n  const groups = typographyGroups.map((group, index) => {\n    const fontSize = token[_.camelCase(`${group}-font-size`)];\n    const fontWeight = token[_.camelCase(`${group}-font-weight`)];\n    const lineHeight = token[_.camelCase(`${group}-line-height`)];\n    const divStyle = { fontSize, fontWeight, lineHeight };\n\n    return (\n      <div className={styles.fontItem} style={divStyle} key={index}>\n        {group} | font-size: {fontSize} | font-weight: {fontWeight} |\n        line-height: {lineHeight}\n      </div>\n    );\n  });\n\n  return (\n    <div className={styles.mainContainer}>\n      <SectionHeader text=\"Typography – Desktop\" type=\"SectionHeader__small\" />\n      <p>\n        To use these OTKit typography rules in your project, we have a\n        production-tested package that exports readily made font groupings for\n        you:{' '}\n        <a href=\"https://github.com/opentable/ot-react-ui-components/tree/master/styles/typography-desktop\">\n          @ot-react-ui/typography-desktop.\n        </a>{' '}\n        See its README for details.\n      </p>\n      <p>\n        It is generally <em>not recommended</em> to directly consume / reference\n        the values in this token unless for explicit reasons, such as\n        overriding.\n      </p>\n      <div className={styles.fontColumn}>{groups}</div>\n    </div>\n  );\n};\n\nexport default TypographyDesktop;\n"],"sourceRoot":""}