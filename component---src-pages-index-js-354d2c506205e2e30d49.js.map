{"version":3,"sources":["webpack:///./node_modules/lodash/_unicodeToArray.js","webpack:///./node_modules/lodash/_createCaseFirst.js","webpack:///./src/components/design-system-partials/otkit-icons-theme.js","webpack:///./node_modules/lodash/capitalize.js","webpack:///../OTKit/otkit-grids/token.common.js","webpack:///./node_modules/lodash/_stringToArray.js","webpack:///./src/components/design-system-partials/otkit-icons.js","webpack:///./src/components/design-system-partials/otkit-shadows.js","webpack:///../OTKit/otkit-typography-desktop/token.common.js","webpack:///./node_modules/lodash/_baseSlice.js","webpack:///../OTKit/otkit-shadows/token.common.js","webpack:///./src/components/design-system-partials/otkit-borders.js","webpack:///./src/pages/index.js","webpack:///./src/components/design-system-partials/otkit-breakpoints.js","webpack:///./src/components/design-system-partials/otkit-grids.js","webpack:///./src/components/design-system-partials/otkit-spacing.js","webpack:///./node_modules/lodash/_asciiToArray.js","webpack:///./src/styles/otkit-typography-desktop.module.scss","webpack:///./node_modules/lodash/upperFirst.js","webpack:///../OTKit/otkit-borders/token.common.js","webpack:///./node_modules/lodash/_hasUnicode.js","webpack:///../OTKit/otkit-breakpoints/token.common.js","webpack:///../OTKit/otkit-spacing/token.common.js","webpack:///./node_modules/lodash/camelCase.js","webpack:///./src/components/design-system-partials/otkit-typography.js","webpack:///./node_modules/lodash/_castSlice.js"],"names":["rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsSeq","join","rsSymbol","reUnicode","RegExp","module","exports","string","match","castSlice","hasUnicode","stringToArray","toString","methodName","strSymbols","undefined","chr","charAt","trailing","slice","Icons","useState","color","setColor","filter","setFilter","keys","icons","sort","actualIcons","getFilter","event","key","target","value","toLowerCase","tokens","name","iconName","regex","map","className","styles","card","iconBlock","icon","dangerouslySetInnerHTML","__html","style","mainContainer","text","type","content","Object","colors","form","onChange","e","updateColor","default","placeholder","renderHeaderContent","sectionIcon","upperFirst","marginLarge","gutterLarge","marginSmall","gutterSmall","asciiToArray","unicodeToArray","Shadows","token","index","xxlargeBoldFontWeight","largeBoldFontWeight","xlargeBoldFontSize","fontFamilyJa","xlargeBoldLineHeight","fontFamily","smallMediumFontWeight","xsmallMediumFontSize","xsmallMediumLineHeight","mediumBoldFontWeight","xxxsmallRegularFontWeight","xsmallRegularFontWeight","smallRegularFontSize","xxsmallRegularFontSize","xxlargeBoldFontSize","largeBoldFontSize","smallRegularLineHeight","xxsmallRegularLineHeight","xxlargeBoldLineHeight","largeBoldLineHeight","xsmallBoldFontWeight","fontWeightMedium","smallMediumFontSize","smallMediumLineHeight","mediumBoldFontSize","mediumBoldLineHeight","xxxsmallRegularFontSize","xsmallRegularFontSize","largeMediumFontWeight","xxxsmallRegularLineHeight","xsmallRegularLineHeight","smallBoldFontWeight","xsmallBoldFontSize","xsmallBoldLineHeight","xlargeBoldFontWeight","largeMediumFontSize","largeMediumLineHeight","fontWeightBold","fontFamilyBrand","xsmallMediumFontWeight","smallBoldFontSize","fontWeightNormal","smallBoldLineHeight","xxsmallRegularFontWeight","smallRegularFontWeight","array","start","end","length","result","Array","boxShadowContainer","Borders","withLayout","href","rel","Breakpoints","Grids","Spacing","split","createCaseFirst","borderRadiusSmall","reHasUnicode","test","breakpointDesktopMin","breakpointTabletMax","breakpointTabletMin","breakpointMobileMax","spacingXsmall","spacingSmall","spacingMedium","spacingLarge","spacingXlarge","spacingXxlarge","capitalize","camelCase","createCompounder","word","typographyGroups","TypographyDesktop","groups","group","fontSize","fontWeight","lineHeight","divStyle","fontItem","fontColumn","baseSlice"],"mappings":"+EACA,IAQIA,EAAW,oBACXC,EAAU,kDACVC,EAAS,2BAETC,EAAc,qBACdC,EAAa,kCACbC,EAAa,qCAIbC,EAPa,MAAQL,EAAU,IAAMC,EAAS,IAOtB,IAGxBK,EAFW,oBAEQD,GADP,gBAAwB,CAACH,EAAaC,EAAYC,GAAYG,KAAK,KAAnE,qBAA2FF,EAAW,MAElHG,EAAW,MAAQ,CAACN,EAAcF,EAAU,IAAKA,EAASG,EAAYC,EAAYL,GAAUQ,KAAK,KAAO,IAGxGE,EAAYC,OAAOT,EAAS,MAAQA,EAAS,KAAOO,EAAWF,EAAO,KAa1EK,EAAOC,QAJP,SAAwBC,GACtB,OAAOA,EAAOC,MAAML,IAAc,K,uBCpCpC,IAAIM,EAAY,EAAQ,QACpBC,EAAa,EAAQ,QACrBC,EAAgB,EAAQ,QACxBC,EAAW,EAAQ,QA6BvBP,EAAOC,QApBP,SAAyBO,GACvB,OAAO,SAASN,GACdA,EAASK,EAASL,GAElB,IAAIO,EAAaJ,EAAWH,GACxBI,EAAcJ,QACdQ,EAEAC,EAAMF,EACNA,EAAW,GACXP,EAAOU,OAAO,GAEdC,EAAWJ,EACXL,EAAUK,EAAY,GAAGb,KAAK,IAC9BM,EAAOY,MAAM,GAEjB,OAAOH,EAAIH,KAAgBK,K,uMC+DhBE,IAnFD,WAAO,IAAD,EACQC,mBAAS,WAA5BC,EADW,KACJC,EADI,OAEUF,mBAAS,IAA9BG,EAFW,KAEHC,EAFG,KAIZC,EAAO,IAAOC,KAAOC,OACrBC,EAAc,IAAUH,EAAM,YAM9BI,EAAY,SAAAC,GAChB,IAAMC,EAAMD,EAAME,OAAOC,OAAS,GAClCT,EAAUO,EAAIG,gBAgCVC,EAASP,EACZL,QAAO,SAAAa,GACN,GAAe,KAAXb,EACF,OAAO,EAET,IAAMc,EAAW,IAAYD,GACvBE,EAAQnC,OAAO,KAAKoB,EAAN,KAAkB,KACtC,OAAOc,EAAS9B,MAAM+B,MAEvBC,KAAI,SAAAH,GACH,IAAMH,EAAQP,IAAMU,GAEpB,OACE,yBAAKI,UAAWC,IAAOC,KAAMX,IAAKK,GAChC,yBAAKI,UAAWC,IAAOE,WACrB,yBACEH,UAAWC,IAAOG,KAClBC,wBAAyB,CAAEC,OAAQb,GACnCc,MAAO,CAAE1B,YAGb,yBAAKmB,UAAWC,IAAOJ,UAAW,IAAYD,QAKtD,OACE,yBAAKI,UAAWC,IAAOO,eACrB,kBAAC,IAAD,CACEC,KAAK,gBACLC,KAAK,uBACLC,QA5DsB,WAC1B,IAAM1B,EAAO2B,OAAO3B,KAAK4B,KAAQ1B,OACjC,OACE,6BAEE,4BACEa,UAAWC,IAAOa,KAClBC,SAAU,SAAAC,GAAC,OAhBC,SAAAnC,GAClBC,EAASD,GAeYoC,CAAYD,EAAExB,OAAOC,QACpCA,MAAOZ,GAEP,4BAAQY,MAAM,UAAUyB,SAAO,GAA/B,mBAGCjC,EAAKc,KAAI,SAAAH,GAAI,OACZ,4BAAQL,IAAKK,EAAMH,MAAOoB,IAAOjB,IAC9B,IAAYA,GADf,MACyBiB,IAAOjB,QAIpC,2BACEI,UAAWC,IAAOa,KAClBJ,KAAK,OACLK,SAAU1B,EACV8B,YAAY,iBAqCLC,KAEX,yBAAKpB,UAAWC,IAAOoB,aAAc1B,M,uBCtF3C,IAAIxB,EAAW,EAAQ,QACnBmD,EAAa,EAAQ,QAqBzB1D,EAAOC,QAJP,SAAoBC,GAClB,OAAOwD,EAAWnD,EAASL,GAAQ4B,iB,mBCnBrC9B,EAAOC,QAAU,CACf0D,YAAa,OACbC,YAAa,OACbC,YAAa,OACbC,YAAa,S,qBCJf,IAAIC,EAAe,EAAQ,QACvB1D,EAAa,EAAQ,QACrB2D,EAAiB,EAAQ,QAe7BhE,EAAOC,QANP,SAAuBC,GACrB,OAAOG,EAAWH,GACd8D,EAAe9D,GACf6D,EAAa7D,K,gLCiDJa,IAxDD,WAAO,IAAD,EACUC,mBAAS,IAA9BG,EADW,KACHC,EADG,KAGZC,EAAO,IAAOC,KAAOC,OACrBC,EAAc,IAAUH,EAAM,YAE9BI,EAAY,SAAAC,GAChB,IAAMC,EAAMD,EAAME,OAAOC,OAAS,GAClCT,EAAUO,EAAIG,gBAYVC,EAASP,EACZL,QAAO,SAAAa,GACN,GAAe,KAAXb,EACF,OAAO,EAET,IAAMc,EAAW,IAAYD,GACvBE,EAAQnC,OAAO,KAAKoB,EAAN,KAAkB,KACtC,OAAOc,EAAS9B,MAAM+B,MAEvBC,KAAI,SAAAH,GACH,IAAMH,EAAQP,IAAMU,GAEpB,OACE,yBAAKI,UAAWC,IAAOC,KAAMX,IAAKK,GAChC,yBAAKI,UAAWC,IAAOE,WACrB,yBACEH,UAAWC,IAAOG,KAClBC,wBAAyB,CAAEC,OAAQb,MAGvC,yBAAKO,UAAWC,IAAOJ,UAAW,IAAYD,QAItD,OACE,yBAAKI,UAAWC,IAAOO,eACrB,kBAAC,IAAD,CACEC,KAAK,QACLC,KAAK,uBACLC,QArCJ,2BACEX,UAAWC,IAAOa,KAClBJ,KAAK,OACLK,SAAU1B,EACV8B,YAAY,kBAmCZ,yBAAKnB,UAAWC,IAAOoB,aAAc1B,M,2JCjC5BkC,IAlBC,WACd,IAAIlC,EAAS,IAAYmC,KASzB,OAPAnC,EAASA,EAAOI,KAAI,SAAC+B,EAAOC,GAC1B,OACE,yBAAKxC,IAAKwC,GACP,IAAYD,EAAM,IADrB,KAC4BA,EAAM,OAKpC,yBAAK9B,UAAWC,IAAOO,eACrB,kBAAC,IAAD,CAAeC,KAAK,UAAUC,KAAK,yBAClCf,K,mBCpBP/B,EAAOC,QAAU,CACfmE,sBAAuB,OACvBC,oBAAqB,OACrBC,mBAAoB,OACpBC,aAAc,mMACdC,qBAAsB,OACtBC,WAAY,+JACZC,sBAAuB,MACvBC,qBAAsB,OACtBC,uBAAwB,OACxBC,qBAAsB,OACtBC,0BAA2B,SAC3BC,wBAAyB,SACzBC,qBAAsB,OACtBC,uBAAwB,OACxBC,oBAAqB,OACrBC,kBAAmB,OACnBC,uBAAwB,OACxBC,yBAA0B,OAC1BC,sBAAuB,OACvBC,oBAAqB,OACrBC,qBAAsB,OACtBC,iBAAkB,MAClBC,oBAAqB,OACrBC,sBAAuB,OACvBC,mBAAoB,OACpBC,qBAAsB,OACtBC,wBAAyB,OACzBC,sBAAuB,OACvBC,sBAAuB,MACvBC,0BAA2B,OAC3BC,wBAAyB,OACzBC,oBAAqB,OACrBC,mBAAoB,OACpBC,qBAAsB,OACtBC,qBAAsB,OACtBC,oBAAqB,OACrBC,sBAAuB,OACvBC,eAAgB,OAChBC,gBAAiB,cACjBC,uBAAwB,MACxBC,kBAAmB,OACnBC,iBAAkB,SAClBC,oBAAqB,OACrBC,yBAA0B,SAC1BC,uBAAwB,W,mBCf1BhH,EAAOC,QArBP,SAAmBgH,EAAOC,EAAOC,GAC/B,IAAIhD,GAAS,EACTiD,EAASH,EAAMG,OAEfF,EAAQ,IACVA,GAASA,EAAQE,EAAS,EAAKA,EAASF,IAE1CC,EAAMA,EAAMC,EAASA,EAASD,GACpB,IACRA,GAAOC,GAETA,EAASF,EAAQC,EAAM,EAAMA,EAAMD,IAAW,EAC9CA,KAAW,EAGX,IADA,IAAIG,EAASC,MAAMF,KACVjD,EAAQiD,GACfC,EAAOlD,GAAS8C,EAAM9C,EAAQ+C,GAEhC,OAAOG,I,mBC3BTrH,EAAOC,QAAU,CACfsH,mBAAoB,qC,2JCwBPC,IAlBC,WACd,IAAIzF,EAAS,IAAYmC,KASzB,OAPAnC,EAASA,EAAOI,KAAI,SAAC+B,EAAOC,GAC1B,OACE,yBAAKxC,IAAKwC,GACP,IAAYD,EAAM,IADrB,KAC4BA,EAAM,OAKpC,yBAAK9B,UAAWC,IAAOO,eACrB,kBAAC,IAAD,CAAeC,KAAK,UAAUC,KAAK,yBAClCf,K,kCCpBP,yLAgBe0F,uBAAW,WACxB,OACE,yBAAKrF,UAAWC,IAAOO,eACrB,kBAAC,IAAD,CAAeC,KAAK,kBACpB,4HAE0B,IACxB,uBAAG6E,KAAK,6CAA6CC,IAAI,aAAa/F,OAAO,UAA7E,4BAHF,KAQA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,SAGH,sB,6JCdYgG,IAlBK,WAClB,IAAI7F,EAAS,IAAYmC,KASzB,OAPAnC,EAASA,EAAOI,KAAI,SAAC+B,EAAOC,GAC1B,OACE,yBAAKxC,IAAKwC,GACP,IAAYD,EAAM,IADrB,KAC4BA,EAAM,OAKpC,yBAAK9B,UAAWC,IAAOO,eACrB,kBAAC,IAAD,CAAeC,KAAK,cAAcC,KAAK,yBACtCf,K,2JCKQ8F,IAlBD,WACZ,IAAI9F,EAAS,IAAYmC,KASzB,OAPAnC,EAASA,EAAOI,KAAI,SAAC+B,EAAOC,GAC1B,OACE,yBAAKxC,IAAKwC,GACP,IAAYD,EAAM,IADrB,KAC4BA,EAAM,OAKpC,yBAAK9B,UAAWC,IAAOO,eACrB,kBAAC,IAAD,CAAeC,KAAK,QAAQC,KAAK,yBAChCf,K,2JCMQ+F,IAnBC,WACd,IAAI/F,EAAS,IAAYmC,KAUzB,OARAnC,EAASA,EAAOI,KAAI,SAAC+B,EAAOC,GAC1B,OACE,yBAAKxC,IAAKwC,GACP,IAAYD,EAAM,IADrB,KAC4BA,EAAM,OAMpC,yBAAK9B,UAAWC,IAAOO,eACrB,kBAAC,IAAD,CAAeC,KAAK,UAAUC,KAAK,yBAClCf,K,mBCVP/B,EAAOC,QAJP,SAAsBC,GACpB,OAAOA,EAAO6H,MAAM,M,qBCPtB/H,EAAOC,QAAU,CAAC,SAAW,oDAAoD,cAAgB,2D,qBCDjG,IAmBIyD,EAnBkB,EAAQ,OAmBbsE,CAAgB,eAEjChI,EAAOC,QAAUyD,G,mBCrBjB1D,EAAOC,QAAU,CACfgI,kBAAmB,Q,mBCArB,IAWIC,EAAenI,OAAO,uFAa1BC,EAAOC,QAJP,SAAoBC,GAClB,OAAOgI,EAAaC,KAAKjI,K,mBCtB3BF,EAAOC,QAAU,CACfmI,qBAAsB,SACtBC,oBAAqB,SACrBC,oBAAqB,QACrBC,oBAAqB,U,mBCJvBvI,EAAOC,QAAU,CACfuI,cAAe,MACfC,aAAc,MACdC,cAAe,OACfC,aAAc,OACdC,cAAe,OACfC,eAAgB,S,qBCNlB,IAAIC,EAAa,EAAQ,QAuBrBC,EAtBmB,EAAQ,OAsBfC,EAAiB,SAAS3B,EAAQ4B,EAAM9E,GAEtD,OADA8E,EAAOA,EAAKnH,cACLuF,GAAUlD,EAAQ2E,EAAWG,GAAQA,MAG9CjJ,EAAOC,QAAU8I,G,wICrBXG,EAAmB,CACvB,eACA,cACA,aACA,eACA,cACA,aACA,eACA,gBACA,cACA,gBACA,kBAwCaC,IArCW,WACxB,IAAMC,EAASF,EAAiB/G,KAAI,SAACkH,EAAOlF,GAC1C,IAAMmF,EAAWpF,IAAM,IAAemF,EAAf,eACjBE,EAAarF,IAAM,IAAemF,EAAf,iBACnBG,EAAatF,IAAM,IAAemF,EAAf,iBACnBI,EAAW,CAAEH,WAAUC,aAAYC,cAEzC,OACE,yBAAKpH,UAAWC,IAAOqH,SAAU/G,MAAO8G,EAAU9H,IAAKwC,GACpDkF,EADH,iBACwBC,EADxB,mBACkDC,EADlD,mBAEgBC,MAKpB,OACE,yBAAKpH,UAAWC,IAAOO,eACrB,kBAAC,IAAD,CAAeC,KAAK,uBAAuBC,KAAK,yBAChD,wKAGO,IACL,uBAAG4E,KAAK,6FAAR,oCAEK,IANP,+BASA,8CACkB,+CADlB,8GAKA,yBAAKtF,UAAWC,IAAOsH,YAAaP,M,qBCrD1C,IAAIQ,EAAY,EAAQ,QAiBxB5J,EAAOC,QANP,SAAmBgH,EAAOC,EAAOC,GAC/B,IAAIC,EAASH,EAAMG,OAEnB,OADAD,OAAczG,IAARyG,EAAoBC,EAASD,GAC1BD,GAASC,GAAOC,EAAUH,EAAQ2C,EAAU3C,EAAOC,EAAOC","file":"component---src-pages-index-js-354d2c506205e2e30d49.js","sourcesContent":["/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","import React, { useState } from 'react';\nimport _ from 'lodash';\nimport icons from 'otkit-icons/token.theme.common';\nimport colors from 'otkit-colors/token.common';\n\nimport SectionHeader from '../section-header';\nimport styles from '../../styles/otkit-icons.module.scss';\n\nconst Icons = () => {\n  const [color, setColor] = useState('#000000');\n  const [filter, setFilter] = useState('');\n\n  const keys = _.keys(icons).sort();\n  const actualIcons = _.without(keys, 'iconSize');\n\n  const updateColor = color => {\n    setColor(color);\n  };\n\n  const getFilter = event => {\n    const key = event.target.value || '';\n    setFilter(key.toLowerCase());\n  };\n\n  const renderHeaderContent = () => {\n    const keys = Object.keys(colors).sort();\n    return (\n      <div>\n        {/* eslint-disable-next-line jsx-a11y/no-onchange */}\n        <select\n          className={styles.form}\n          onChange={e => updateColor(e.target.value)}\n          value={color}\n        >\n          <option value=\"#000000\" default>\n            Black - #000000\n          </option>\n          {keys.map(name => (\n            <option key={name} value={colors[name]}>\n              {_.kebabCase(name)} - {colors[name]}\n            </option>\n          ))}\n        </select>\n        <input\n          className={styles.form}\n          type=\"text\"\n          onChange={getFilter}\n          placeholder=\"Search icon\"\n        />\n      </div>\n    );\n  };\n\n  const tokens = actualIcons\n    .filter(name => {\n      if (filter === '') {\n        return true;\n      }\n      const iconName = _.kebabCase(name);\n      const regex = RegExp(`.*${filter}.*`, 'g');\n      return iconName.match(regex);\n    })\n    .map(name => {\n      const value = icons[name];\n\n      return (\n        <div className={styles.card} key={name}>\n          <div className={styles.iconBlock}>\n            <div\n              className={styles.icon}\n              dangerouslySetInnerHTML={{ __html: value }}\n              style={{ color }}\n            />\n          </div>\n          <div className={styles.iconName}>{_.kebabCase(name)}</div>\n        </div>\n      );\n    });\n\n  return (\n    <div className={styles.mainContainer}>\n      <SectionHeader\n        text=\"Icons (theme)\"\n        type=\"SectionHeader__small\"\n        content={renderHeaderContent()}\n      />\n      <div className={styles.sectionIcon}>{tokens}</div>\n    </div>\n  );\n};\n\nexport default Icons;\n","var toString = require('./toString'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;\n","module.exports = {\n  marginLarge: \"32px\",\n  gutterLarge: \"16px\",\n  marginSmall: \"24px\",\n  gutterSmall: \"12px\",\n};","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","import React, { useState } from 'react';\nimport _ from 'lodash';\nimport icons from 'otkit-icons/token.common';\n\nimport SectionHeader from '../section-header';\nimport styles from '../../styles/otkit-icons.module.scss';\n\nconst Icons = () => {\n  const [filter, setFilter] = useState('');\n\n  const keys = _.keys(icons).sort();\n  const actualIcons = _.without(keys, 'iconSize');\n\n  const getFilter = event => {\n    const key = event.target.value || '';\n    setFilter(key.toLowerCase());\n  };\n\n  const renderHeaderContent = () => (\n    <input\n      className={styles.form}\n      type=\"text\"\n      onChange={getFilter}\n      placeholder=\"Search icon\"\n    />\n  );\n\n  const tokens = actualIcons\n    .filter(name => {\n      if (filter === '') {\n        return true;\n      }\n      const iconName = _.kebabCase(name);\n      const regex = RegExp(`.*${filter}.*`, 'g');\n      return iconName.match(regex);\n    })\n    .map(name => {\n      const value = icons[name];\n\n      return (\n        <div className={styles.card} key={name}>\n          <div className={styles.iconBlock}>\n            <div\n              className={styles.icon}\n              dangerouslySetInnerHTML={{ __html: value }}\n            />\n          </div>\n          <div className={styles.iconName}>{_.kebabCase(name)}</div>\n        </div>\n      );\n    });\n  return (\n    <div className={styles.mainContainer}>\n      <SectionHeader\n        text=\"Icons\"\n        type=\"SectionHeader__small\"\n        content={renderHeaderContent()}\n      />\n      <div className={styles.sectionIcon}>{tokens}</div>\n    </div>\n  );\n};\n\nexport default Icons;\n","import React from 'react';\nimport _ from 'lodash';\nimport token from 'otkit-shadows/token.common';\n\nimport SectionHeader from '../section-header';\nimport styles from '../../styles/index.module.scss';\n\nconst Shadows = () => {\n  var tokens = _.toPairsIn(token);\n\n  tokens = tokens.map((token, index) => {\n    return (\n      <div key={index}>\n        {_.kebabCase(token[0])}: {token[1]}\n      </div>\n    );\n  });\n  return (\n    <div className={styles.mainContainer}>\n      <SectionHeader text=\"Shadows\" type=\"SectionHeader__small\" />\n      {tokens}\n    </div>\n  );\n};\n\nexport default Shadows;\n","module.exports = {\n  xxlargeBoldFontWeight: \"bold\",\n  largeBoldFontWeight: \"bold\",\n  xlargeBoldFontSize: \"32px\",\n  fontFamilyJa: \"'BrandonText', 'Helvetica Neue', Helvetica, Arial, OpenTableHiragino, Roboto, Droid Sans, '游ゴシック体', OpenTableYuGothic, YuGothic, Yu Gothic, 'メイリオ', Meiryo, 'ＭＳ Ｐゴシック', 'MS PGothic', sans-serif\",\n  xlargeBoldLineHeight: \"36px\",\n  fontFamily: \"'BrandonText', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'\",\n  smallMediumFontWeight: \"500\",\n  xsmallMediumFontSize: \"14px\",\n  xsmallMediumLineHeight: \"20px\",\n  mediumBoldFontWeight: \"bold\",\n  xxxsmallRegularFontWeight: \"normal\",\n  xsmallRegularFontWeight: \"normal\",\n  smallRegularFontSize: \"16px\",\n  xxsmallRegularFontSize: \"12px\",\n  xxlargeBoldFontSize: \"48px\",\n  largeBoldFontSize: \"24px\",\n  smallRegularLineHeight: \"24px\",\n  xxsmallRegularLineHeight: \"16px\",\n  xxlargeBoldLineHeight: \"56px\",\n  largeBoldLineHeight: \"28px\",\n  xsmallBoldFontWeight: \"bold\",\n  fontWeightMedium: \"500\",\n  smallMediumFontSize: \"16px\",\n  smallMediumLineHeight: \"24px\",\n  mediumBoldFontSize: \"18px\",\n  mediumBoldLineHeight: \"24px\",\n  xxxsmallRegularFontSize: \"10px\",\n  xsmallRegularFontSize: \"14px\",\n  largeMediumFontWeight: \"500\",\n  xxxsmallRegularLineHeight: \"12px\",\n  xsmallRegularLineHeight: \"20px\",\n  smallBoldFontWeight: \"bold\",\n  xsmallBoldFontSize: \"14px\",\n  xsmallBoldLineHeight: \"20px\",\n  xlargeBoldFontWeight: \"bold\",\n  largeMediumFontSize: \"24px\",\n  largeMediumLineHeight: \"32px\",\n  fontWeightBold: \"bold\",\n  fontFamilyBrand: \"BrandonText\",\n  xsmallMediumFontWeight: \"500\",\n  smallBoldFontSize: \"16px\",\n  fontWeightNormal: \"normal\",\n  smallBoldLineHeight: \"24px\",\n  xxsmallRegularFontWeight: \"normal\",\n  smallRegularFontWeight: \"normal\",\n};","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","module.exports = {\n  boxShadowContainer: \"0px 2px 4px rgba(45, 51, 63, .2)\",\n};","import React from 'react';\nimport _ from 'lodash';\nimport token from 'otkit-borders/token.common';\n\nimport SectionHeader from '../section-header';\nimport styles from '../../styles/index.module.scss';\n\nconst Borders = () => {\n  var tokens = _.toPairsIn(token);\n\n  tokens = tokens.map((token, index) => {\n    return (\n      <div key={index}>\n        {_.kebabCase(token[0])}: {token[1]}\n      </div>\n    );\n  });\n  return (\n    <div className={styles.mainContainer}>\n      <SectionHeader text=\"Borders\" type=\"SectionHeader__small\" />\n      {tokens}\n    </div>\n  );\n};\n\nexport default Borders;\n","import React from 'react';\nimport withLayout from '../hocs/withLayout';\n\nimport styles from '../styles/index.module.scss';\n\nimport Colors from '../components/design-system-partials/otkit-colors.js';\nimport Typography from '../components/design-system-partials/otkit-typography.js';\nimport Spacing from '../components/design-system-partials/otkit-spacing.js';\nimport Borders from '../components/design-system-partials/otkit-borders.js';\nimport Breakpoints from '../components/design-system-partials/otkit-breakpoints.js';\nimport Shadows from '../components/design-system-partials/otkit-shadows.js';\nimport Grids from '../components/design-system-partials/otkit-grids.js';\nimport Icons from '../components/design-system-partials/otkit-icons.js';\nimport IconsTheme from '../components/design-system-partials/otkit-icons-theme.js';\nimport SectionHeader from '../components/section-header';\n\nexport default withLayout(() => {\n  return (\n    <div className={styles.mainContainer}>\n      <SectionHeader text=\"Design Tokens\" />\n      <p>\n        This page shows current design tokens used in OTKit. To contribute, or\n        add an issue, visit the{' '}\n        <a href=\"https://github.com/opentable/design-tokens\" rel=\"noreferrer\" target=\"_blank\">\n          design-tokens repository\n        </a>\n        .\n      </p>\n      <Colors />\n      <Typography />\n      <Grids />\n      <Spacing />\n      <Borders />\n      <Breakpoints />\n      <Shadows />\n      <Icons />\n      <IconsTheme />\n    </div>\n  );\n}, 'design-system-nav');\n","import React from 'react';\nimport _ from 'lodash';\nimport token from 'otkit-breakpoints/token.common';\n\nimport SectionHeader from '../section-header';\nimport styles from '../../styles/index.module.scss';\n\nconst Breakpoints = () => {\n  var tokens = _.toPairsIn(token);\n\n  tokens = tokens.map((token, index) => {\n    return (\n      <div key={index}>\n        {_.kebabCase(token[0])}: {token[1]}\n      </div>\n    );\n  });\n  return (\n    <div className={styles.mainContainer}>\n      <SectionHeader text=\"Breakpoints\" type=\"SectionHeader__small\" />\n      {tokens}\n    </div>\n  );\n};\n\nexport default Breakpoints;\n","import React from 'react';\nimport _ from 'lodash';\nimport token from 'otkit-grids/token.common';\n\nimport SectionHeader from '../section-header';\nimport styles from '../../styles/index.module.scss';\n\nconst Grids = () => {\n  var tokens = _.toPairsIn(token);\n\n  tokens = tokens.map((token, index) => {\n    return (\n      <div key={index}>\n        {_.kebabCase(token[0])}: {token[1]}\n      </div>\n    );\n  });\n  return (\n    <div className={styles.mainContainer}>\n      <SectionHeader text=\"Grids\" type=\"SectionHeader__small\" />\n      {tokens}\n    </div>\n  );\n};\n\nexport default Grids;\n","import React from 'react';\nimport _ from 'lodash';\nimport token from 'otkit-spacing/token.common';\n\nimport SectionHeader from '../section-header';\nimport styles from '../../styles/index.module.scss';\n\nconst Spacing = () => {\n  var tokens = _.toPairsIn(token);\n\n  tokens = tokens.map((token, index) => {\n    return (\n      <div key={index}>\n        {_.kebabCase(token[0])}: {token[1]}\n      </div>\n    );\n  });\n\n  return (\n    <div className={styles.mainContainer}>\n      <SectionHeader text=\"Spacing\" type=\"SectionHeader__small\" />\n      {tokens}\n    </div>\n  );\n};\n\nexport default Spacing;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fontItem\":\"otkit-typography-desktop-module--font-item--W_aj9\",\"mainContainer\":\"otkit-typography-desktop-module--main-container--20br3\"};","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n","module.exports = {\n  borderRadiusSmall: \"4px\",\n};","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","module.exports = {\n  breakpointDesktopMin: \"1056px\",\n  breakpointTabletMax: \"1055px\",\n  breakpointTabletMin: \"768px\",\n  breakpointMobileMax: \"767px\",\n};","module.exports = {\n  spacingXsmall: \"4px\",\n  spacingSmall: \"8px\",\n  spacingMedium: \"16px\",\n  spacingLarge: \"32px\",\n  spacingXlarge: \"48px\",\n  spacingXxlarge: \"64px\",\n};","var capitalize = require('./capitalize'),\n    createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the camel cased string.\n * @example\n *\n * _.camelCase('Foo Bar');\n * // => 'fooBar'\n *\n * _.camelCase('--foo-bar--');\n * // => 'fooBar'\n *\n * _.camelCase('__FOO_BAR__');\n * // => 'fooBar'\n */\nvar camelCase = createCompounder(function(result, word, index) {\n  word = word.toLowerCase();\n  return result + (index ? capitalize(word) : word);\n});\n\nmodule.exports = camelCase;\n","import React from 'react';\nimport _ from 'lodash';\nimport token from 'otkit-typography-desktop/token.common';\n\nimport SectionHeader from '../section-header';\nimport styles from '../../styles/otkit-typography-desktop.module.scss';\n\nconst typographyGroups = [\n  'xxlarge-bold',\n  'xlarge-bold',\n  'large-bold',\n  'large-medium',\n  'medium-bold',\n  'small-bold',\n  'small-medium',\n  'small-regular',\n  'xsmall-bold',\n  'xsmall-medium',\n  'xsmall-regular'\n];\n\nconst TypographyDesktop = () => {\n  const groups = typographyGroups.map((group, index) => {\n    const fontSize = token[_.camelCase(`${group}-font-size`)];\n    const fontWeight = token[_.camelCase(`${group}-font-weight`)];\n    const lineHeight = token[_.camelCase(`${group}-line-height`)];\n    const divStyle = { fontSize, fontWeight, lineHeight };\n\n    return (\n      <div className={styles.fontItem} style={divStyle} key={index}>\n        {group} | font-size: {fontSize} | font-weight: {fontWeight} |\n        line-height: {lineHeight}\n      </div>\n    );\n  });\n\n  return (\n    <div className={styles.mainContainer}>\n      <SectionHeader text=\"Typography – Desktop\" type=\"SectionHeader__small\" />\n      <p>\n        To use these OTKit typography rules in your project, we have a\n        production-tested package that exports readily made font groupings for\n        you:{' '}\n        <a href=\"https://github.com/opentable/ot-react-ui-components/tree/master/styles/typography-desktop\">\n          @ot-react-ui/typography-desktop.\n        </a>{' '}\n        See its README for details.\n      </p>\n      <p>\n        It is generally <em>not recommended</em> to directly consume / reference\n        the values in this token unless for explicit reasons, such as\n        overriding.\n      </p>\n      <div className={styles.fontColumn}>{groups}</div>\n    </div>\n  );\n};\n\nexport default TypographyDesktop;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n"],"sourceRoot":""}